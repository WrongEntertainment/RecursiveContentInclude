#!/usr/bin/env node

/**
 * Module dependencies.
 */
var program = require('commander');
var CommanderUtils = require('commander-utils');
var pkg = require('../package.json');
var fs = require('fs');
var rci = require('../lib');

/**
 * Initialize the commander-utils module.
 */
CommanderUtils(program, pkg);
/**
 * Set some commander-utils specific settings.
 */
program
  .setDescription('Recursive Content Include')
  .addExamples([
    { description: 'Process a file and print the result to console.',
      command:     'rci --input path/to/file.txt' },
    { description: 'Process a file with custom begin/end tags (mustache style).',
      command:     'rci --begin-tag {{ --end-tag }} --input path/to/file.txt' }
  ]);

/**
 * The tool options.
 */
program
  .option('-i, --input <File>', 'the file input')
  .option('-o, --output <File>', 'the file output')
  .option('-b, --begin-tag <String>', 'set the begin tag')
  .option('-e, --end-tag <String>', 'set the end tag');

/**
 * Parse it.
 */
program.parseUtils(process.argv);

/**
 * The tool logic.
 */
var beginTag = '<%>';
var endTag = '</%>';

if (program.input) {
  var data = rci.readFileSync(program.input, beginTag, endTag);
  // save the file if the --output option was set.
  if (program.output) {
    fs.writeFile(program.output, data, 'utf8', function() {
      program.log.info('Write file to ' + program.output);
    });
  }
  else {
    program.log.info(data);
  }
}

if (program.beginTag) {
  beginTag = program.beginTag;
  program.log.info('Set the begin Tag to: ' + beginTag);
}

if (program.endTag) {
  endTag = program.endTag;
  program.log.info('Set the end Tag to: ' + endTag);
}

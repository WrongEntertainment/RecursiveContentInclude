#!/usr/bin/env node

/**
 * Module dependencies.
 */
var program = require('commander');
var CommanderUtils = require('commander-utils');
var pkg = require('../package.json');
var fs = require('fs');
var resi = require('../lib');

/**
 * Initialize the commander-utils module.
 */
CommanderUtils(program, pkg);
/**
 * Set some commander-utils specific settings.
 */
program
  .setDescription('Recursive Content Include')
  .addExamples([
    { description: 'Process a local file and print the result to console.',
      command:     'resi --input path/to/file.txt' },
    { description: 'Request a file and process it. Print the result to console.',
      command:     'resi --input http://url.to.file/' },
    { description: 'Process a file with custom begin/end tags (mustache style).',
      command:     'resi --begin-tag {{ --end-tag }} --input path/to/file.txt' }
  ]);

/**
 * The tool options.
 */
program
  .option('-i, --input <File>', 'the input, local file or web url')
  .option('-o, --output <File>', 'the file output')
  .option('-b, --begin-tag <String>', 'set the begin tag')
  .option('-e, --end-tag <String>', 'set the end tag');

/**
 * Parse it.
 */
program.parseUtils(process.argv);

/**
 * The tool logic.
 */
var beginTag = '<%>';
var endTag = '</%>';

if (program.input) {
  // Check if the input is an url.
  if (resi.isHttp(program.input)) {
    var request = require('request');
    request(program.input, function (error, response, body) {
      if (!error && response.statusCode == 200) {
        var data = resi.process(body, beginTag, endTag);
        outputHelper(data);
      }
    });
  }
  // If it is no url, read the file
  else {
    var data = resi.readFileSync(program.input, beginTag, endTag);
    outputHelper(data);
  }
}

if (program.beginTag) {
  beginTag = program.beginTag;
  program.log.info('Set the begin Tag to: ' + beginTag);
}

if (program.endTag) {
  endTag = program.endTag;
  program.log.info('Set the end Tag to: ' + endTag);
}

/**
 * save the file if the --output option was set.
 */
function outputHelper(data) {
  if (program.output) {
    program.log.info('Write file to ' + program.output);
    fs.writeFile(program.output, data, 'utf8', function() {
      program.log.info('File writer ready!');
    });
  }
  else {
    program.log.info(data);
  }
};